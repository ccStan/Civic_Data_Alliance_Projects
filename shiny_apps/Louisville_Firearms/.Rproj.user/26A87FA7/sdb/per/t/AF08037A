{
    "collab_server" : "",
    "contents" : "library(shinydashboard)\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(rgdal)\nlibrary(gpclib)\nlibrary(maptools)\nlibrary(R6)\nlibrary(raster)\nlibrary(broom)\nlibrary(scales)\nlibrary(reshape2)\nlibrary(zoo)\nlibrary(ggthemes)\nlibrary(tidyverse)\ngpclibPermit()\n\nrlk_theme<-function(base_family = \"Helvetica\", base_size = 12) {\n  theme_bw(base_family = base_family, base_size = base_size) +\n    theme(\n      plot.title = element_text(face = 'bold', hjust = 0, color=\"#4292c6\", size= 24),\n      plot.subtitle = element_text(face = 'bold', hjust = 0, color=\"#4292c6\", size= 14),\n      text = element_text(colour = 'black'),\n      panel.background = element_blank(),\n      strip.background = element_blank(),\n      plot.background = element_rect('#F6F6F6'),\n      panel.border = element_blank(),\n      panel.grid.major.x = element_blank(),\n      panel.grid.major.y = element_line(color=\"#4292c6\",size=rel(1.75)),\n      panel.grid.minor.y = element_blank(),\n      panel.grid.minor.x = element_blank(),\n      legend.background = element_blank(),\n      legend.title = element_text(face='bold', size=8, color=\"#4292c6\"),\n      legend.position = 'bottom',\n      legend.direction = 'horizontal',\n      legend.key = element_blank(),\n      legend.text= element_text(face='bold', size=8, color=\"#4292c6\"),\n      strip.text = element_blank(),\n      axis.text.y = element_text(size = 10, color='#000000'),\n      axis.text.x = element_text(size = 10, color='#000000'),\n      axis.title = element_text(face = 'bold', size = 10, color='#000000'),\n      axis.ticks = element_blank()\n    )\n}\n\n\n\n\nfirearms_data <- read_csv('FIREARMS_DATA_W_YEAR.csv')\nfirearms_data <- mutate(firearms_data, RECOVERY_DATE = as.Date(firearms_data$RECOVERY_DATE, format = '%m/%d/%Y'),\n                        age_group = cut(as.numeric(firearms_data$PERSON_RECOVERED_FROM_AGE), breaks = 10*(0:10)),\n                        shooting_yearmon = as.yearmon(RECOVERY_DATE),\n                        UCR_CATEGORY = as.factor(UCR_CATEGORY),\n                        TYPE_OF_FIREARM = as.factor(TYPE_OF_FIREARM),\n                        FIREARM_MANUFACTURER = as.factor(FIREARM_MANUFACTURER),\n                        FIREARM_CALIBER = as.factor(FIREARM_CALIBER),\n                        PERSON_RECOVERED_FROM_RACE = as.factor(PERSON_RECOVERED_FROM_RACE),\n                        PERSON_RECOVERED_FROM_SEX = as.factor(PERSON_RECOVERED_FROM_SEX)\n)\n\njeff_co_zips<-c(40118,40201,40203,40202,40205,40204,40207,40206,40209,40208,40211,40210,40213,40212,40215,40214,40217,40216,40219,40218,40220,40223,\n                40222,40225,40229,40228,40241,40243,40242,40245,40257,40258,40272,40025,40023,40027,40292,40291,40299,40059)\n\ncategories <- c('Type of Incident' = 'UCR_CATEGORY',\n                'Type of Firearm' = 'TYPE_OF_FIREARM',\n                'Firearm Manufacturer' = 'FIREARM_MANUFACTURER',\n                'Firearm Model' = 'FIREARM_MODEL',\n                'Firearm Caliber' = 'FIREARM_CALIBER',\n                'Race' = 'PERSON_RECOVERED_FROM_RACE')\n\nky_zips<-readOGR('./shapefile', layer='ky_zips')\nky_zips@data$id <- rownames(ky_zips@data)\nky_zips.points <- tidy(ky_zips, region = 'id')\nky_zips.df <- inner_join(ky_zips.points, ky_zips@data, by='id')\n\n\n\ncreate_leaflet <- function(analysis_year, analysis_factor, filter_value){\n  firearm_summary<-create_table(analysis_year, analysis_factor, filter_value)\n  \n  lou_zips <- subset(ky_zips, ZCTA5CE10 %in% jeff_co_zips)\n  lou_zips@data <- left_join(lou_zips@data, firearm_summary, by=c('ZCTA5CE10' = 'RECOVERY_ZIPCODE')) %>% \n    mutate(analysis = ifelse(is.na(analysis), 0, analysis))\n  \n  pop<-paste0('<strong>',lou_zips$ZCTA5CE10,':</strong> ',lou_zips$analysis)\n  lou_zips@data$color <- colorBin('YlOrRd', NULL, n = 7)(lou_zips$analysis)\n  \n  leaflet(data = lou_zips) %>% \n    addTiles() %>% \n    setView(lng = -85.7369, lat = 38.1757, zoom = 10) %>% \n    addPolygons(data = lou_zips, \n                stroke = F, \n                smoothFactor = 0.2, \n                fillOpacity = 0.75, \n                fillColor = lou_zips@data$color,\n                color =\"#BDBDC3\",\n                popup = pop) %>% \n    addPolylines(weight = 2, color='black')\n}\n\ncreate_table <- function(analysis_year, analysis_factor, filter_value){\n  firearms_data$level_of_analysis <- firearms_data[analysis_factor]\n  filter(firearms_data, year == as.numeric(analysis_year),\n                          level_of_analysis == filter_value) %>% \n    group_by(RECOVERY_ZIPCODE) %>% \n    dplyr::summarize(analysis = n()) %>% \n    mutate(RECOVERY_ZIPCODE = as.factor(RECOVERY_ZIPCODE),\n           analysis = ifelse(is.na(analysis), 0, analysis)) %>% \n    arrange(desc(analysis))\n}\n\ncreate_plot <- function(zip_code, analysis_factor, filter_value){\n  firearms_data$level_of_analysis <- unlist(firearms_data[analysis_factor])\n  if(zip_code == 'All'){\n    plot_data<- firearms_data %>% \n      filter(level_of_analysis == filter_value, !is.na(year)) %>% \n      group_by(year) %>% \n      dplyr::summarize(total = n()) %>% \n      arrange(desc(total)) %>% \n      mutate(color = 'bluish')\n  }else{\n    plot_data<- firearms_data %>% \n      filter(RECOVERY_ZIPCODE == as.numeric(zip_code), level_of_analysis == filter_value, !is.na(year)) %>% \n      group_by(year) %>% \n      dplyr::summarize(total = n()) %>% \n      arrange(desc(total)) %>% \n      mutate(color = 'bluish')\n  }\n\n  \n  ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) + \n    geom_bar(stat='identity')+\n    geom_label() +\n    scale_fill_manual(values = c('bluish' = '#2171b5'))+\n    labs(title = paste0(analysis_factor,' ~ ',filter_value),\n         subtitle = zip_code,\n         y = 'Number of Incidents',\n         x = '')+\n    rlk_theme() + \n    theme(legend.position = 'none')\n}\n\ntrending_plot <- function(analysis_factor, filter_value){\n  firearms_data$level_of_analysis <- firearms_data[analysis_factor]\n  filter(level_of_analysis == filter_value) %>% \n    group_by(RECOVERY_ZIPCODE) %>% \n    dplyr::summarize(analysis = n()) %>% \n    mutate(RECOVERY_ZIPCODE = as.factor(RECOVERY_ZIPCODE),\n           analysis = ifelse(is.na(analysis), 0, analysis)) %>% \n    arrange(desc(analysis))\n}\n\n\nui<-dashboardPage(\n  dashboardHeader(title = 'Gun Incidents in Louisville, KY',\n                  titleWidth = 600),\n  dashboardSidebar(\n    selectInput('maps_or_graphs', 'Maps or Graphs?', c('Maps' = 'map', 'Graphs' = 'graph'), selected = 'graph'),\n    conditionalPanel(\n      condition = 'input.maps_or_graphs == \"map\"',\n      selectInput('year','Select Year', c(2016,2015,2014,2013,2012,2011,2010), selected = 2016)\n    ),\n    conditionalPanel(\n      condition = 'input.maps_or_graphs == \"graph\"',\n      selectInput('zip','Zip Code:', c('All', jeff_co_zips), selected = 'All')\n    ),\n    selectInput('stat', 'Select Category', categories, selected = 'UCR_CATEGORY'),\n    uiOutput('selectFilter')\n  ),\n  dashboardBody(\n    conditionalPanel(\n      condition = \"input.maps_or_graphs == 'map'\",\n      tags$style(type = \"text/css\", \"#map {height: calc(100vh - 400px) !important;}\"),\n      leafletOutput('map'),\n      dataTableOutput('data_in_table')\n    ),\n    conditionalPanel(\n      condition = \"input.maps_or_graphs == 'graph'\",\n      plotOutput('make_a_plot')\n    )\n  )\n)\n\nserver<-function(input,output){\n  selected_stat <- reactive({input$stat})\n  selected_filter <- reactive({input$filter_selection})\n  output$map <- renderLeaflet({\n    create_leaflet(input$year, selected_stat(), selected_filter())\n  })\n\n  output$selectFilter<-renderUI({\n    selectInput('filter_selection', 'Filter By:', as.character(unique(unlist(firearms_data[selected_stat()]))))\n  })\n\n  output$data_in_table<-renderDataTable({\n    dt <- create_table(input$year, selected_stat(), selected_filter())\n    names(dt) <- c('Zip Code', 'Number of Incidents')\n    dt\n  }, options = list(pageLength = 8))\n  \n  output$make_a_plot<-renderPlot({\n    if(is.null(selected_filter())){\n      plot(create_plot(input$zip, selected_stat(), unlist(unique(firearms_data[selected_stat()]))[1]))\n    }else{\n      plot(create_plot(input$zip, selected_stat(), selected_filter()))\n    }\n  })\n}\n\nshinyApp(ui, server)\n",
    "created" : 1488312004547.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2042216679",
    "id" : "AF08037A",
    "lastKnownWriteTime" : 1488385911,
    "last_content_update" : 1488385911893,
    "path" : "C:/GitHub/Louisville_Firearms/Louisville_Firearms.R",
    "project_path" : "Louisville_Firearms.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}