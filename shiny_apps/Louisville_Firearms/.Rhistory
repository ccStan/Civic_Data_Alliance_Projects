arrange(desc(total))
ggplot(plot_data, aes(x = as.character(year), y=total)) +
geom_bar(stat='identity')+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')
library(ggthemes)
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '') +
theme_tufte()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '') +
theme_few()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '') +
theme_solarized()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '') +
theme_base()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')
runApp('Louisville_Firearms.R')
rlk_theme<-function(base_family = "Open Sans", base_size = 12) {
theme_bw(base_family = base_family, base_size = base_size) +
theme(
plot.title = element_text(face = 'bold', hjust = 0, color="#2b8cbe", size= 24),
plot.subtitle = element_text(face = 'bold', hjust = 0, color="#2b8cbe", size= 14),
text = element_text(colour = 'black'),
panel.background = element_blank(),
strip.background = element_blank(),
plot.background = element_rect('#F6F6F6'),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="#2b8cbe",size=rel(1.75)),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.background = element_blank(),
legend.title = element_text(face='bold', size=8, color="#2b8cbe"),
legend.position = 'bottom',
legend.direction = 'horizontal',
legend.key = element_blank(),
legend.text= element_text(face='bold', size=8, color="#2b8cbe"),
strip.text = element_blank(),
axis.text.y = element_text(size = 10, color='#000000'),
axis.text.x = element_text(size = 10, color='#000000'),
axis.title = element_text(face = 'bold', size = 10, color='#000000'),
axis.ticks = element_blank()
)
}
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
plot_data<- firearms_data %>%
filter(level_of_analysis == filter_value, !is.na(year)) %>%
group_by(year) %>%
dplyr::summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(color = '#2b8cbe')
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
scale_color_manual(values = '#2b8cbe')
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
geom_smooth(method = 'lm') +
scale_color_manual(values = '#2b8cbe')+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
theme_bw(base_family = base_family, base_size = base_size) +
theme(
plot.title = element_text(face = 'bold', hjust = 0, color="#a6bddb", size= 24),
plot.subtitle = element_text(face = 'bold', hjust = 0, color="#a6bddb", size= 14),
text = element_text(colour = 'black'),
panel.background = element_blank(),
strip.background = element_blank(),
plot.background = element_rect('#F6F6F6'),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="#a6bddb",size=rel(1.75)),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.background = element_blank(),
legend.title = element_text(face='bold', size=8, color="#a6bddb"),
legend.position = 'bottom',
legend.direction = 'horizontal',
legend.key = element_blank(),
legend.text= element_text(face='bold', size=8, color="#a6bddb"),
strip.text = element_blank(),
axis.text.y = element_text(size = 10, color='#000000'),
axis.text.x = element_text(size = 10, color='#000000'),
axis.title = element_text(face = 'bold', size = 10, color='#000000'),
axis.ticks = element_blank()
)
rlk_theme<-function(base_family = "Open Sans", base_size = 12) {
theme_bw(base_family = base_family, base_size = base_size) +
theme(
plot.title = element_text(face = 'bold', hjust = 0, color="#a6bddb", size= 24),
plot.subtitle = element_text(face = 'bold', hjust = 0, color="#a6bddb", size= 14),
text = element_text(colour = 'black'),
panel.background = element_blank(),
strip.background = element_blank(),
plot.background = element_rect('#F6F6F6'),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="#a6bddb",size=rel(1.75)),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.background = element_blank(),
legend.title = element_text(face='bold', size=8, color="#a6bddb"),
legend.position = 'bottom',
legend.direction = 'horizontal',
legend.key = element_blank(),
legend.text= element_text(face='bold', size=8, color="#a6bddb"),
strip.text = element_blank(),
axis.text.y = element_text(size = 10, color='#000000'),
axis.text.x = element_text(size = 10, color='#000000'),
axis.title = element_text(face = 'bold', size = 10, color='#000000'),
axis.ticks = element_blank()
)
}
plot_data<- firearms_data %>%
filter(level_of_analysis == filter_value, !is.na(year)) %>%
group_by(year) %>%
dplyr::summarize(total = n()) %>%
arrange(desc(total))
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = '#2b8cbe')+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
plot_data<- firearms_data %>%
filter(level_of_analysis == filter_value, !is.na(year)) %>%
group_by(year) %>%
dplyr::summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(color = 'bluish')
warnings()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2b8cbe')+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
ggplot(plot_data, aes(x = as.character(year), y=total, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2b8cbe'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2b8cbe'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
rlk_theme<-function(base_family = "Open Sans", base_size = 12) {
theme_bw(base_family = base_family, base_size = base_size) +
theme(
plot.title = element_text(face = 'bold', hjust = 0, color="#a6bddb", size= 24),
plot.subtitle = element_text(face = 'bold', hjust = 0, color="#a6bddb", size= 14),
text = element_text(colour = 'black'),
panel.background = element_blank(),
strip.background = element_blank(),
plot.background = element_rect('#F6F6F6'),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="#a6bddb",size=rel(1.75)),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.background = element_blank(),
legend.title = element_text(face='bold', size=8, color="#a6bddb"),
legend.position = 'bottom',
legend.direction = 'horizontal',
legend.key = element_blank(),
legend.text= element_text(face='bold', size=8, color="#a6bddb"),
strip.text = element_blank(),
axis.text.y = element_text(size = 10, color='#000000'),
axis.text.x = element_text(size = 10, color='#000000'),
axis.title = element_text(face = 'bold', size = 10, color='#000000'),
axis.ticks = element_blank()
)
}
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#084594'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
rlk_theme<-function(base_family = "Open Sans", base_size = 12) {
theme_bw(base_family = base_family, base_size = base_size) +
theme(
plot.title = element_text(face = 'bold', hjust = 0, color="#4292c6", size= 24),
plot.subtitle = element_text(face = 'bold', hjust = 0, color="#4292c6", size= 14),
text = element_text(colour = 'black'),
panel.background = element_blank(),
strip.background = element_blank(),
plot.background = element_rect('#F6F6F6'),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="#4292c6",size=rel(1.75)),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.background = element_blank(),
legend.title = element_text(face='bold', size=8, color="#4292c6"),
legend.position = 'bottom',
legend.direction = 'horizontal',
legend.key = element_blank(),
legend.text= element_text(face='bold', size=8, color="#4292c6"),
strip.text = element_blank(),
axis.text.y = element_text(size = 10, color='#000000'),
axis.text.x = element_text(size = 10, color='#000000'),
axis.title = element_text(face = 'bold', size = 10, color='#000000'),
axis.ticks = element_blank()
)
}
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme()
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme() +
theme(legend.position = element_blank())
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme() +
theme(legend.position = 'none')
?selectInput
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
filter_selection
stat
create_plot <- function(analysis_factor, filter_value){
firearms_data$level_of_analysis <- unlist(firearms_data[analysis_factor])
plot_data<- firearms_data %>%
filter(level_of_analysis == filter_value, !is.na(year)) %>%
group_by(year) %>%
dplyr::summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(color = 'bluish')
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme() +
theme(legend.position = 'none')
}
create_plot(stat, filter_selection)
warnings()
create_plot(stat, 'SUICIDE')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
?renderPlot
runApp('Louisville_Firearms.R')
selected_filter()
selected_stat()
firearms_data['UCR_CATEGORY'] %>% unique()
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
selected_stat()
input$stat
input$filter_selection
Q
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
selected_filter()
selected_stat()
unique(firearms_data[selected_stat()])[1]
unique(firearms_data[selected_stat()])
unique(firearms_data[selected_stat()])[1]
unlist(unique(firearms_data[selected_stat()]))[1]
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
selected_stat()
unlist(unique(firearms_data[selected_stat()]))[1]
create_plot(selected_stat(), unlist(unique(firearms_data[selected_stat()]))[1])
runApp('Louisville_Firearms.R')
create_plot(selected_stat(), unlist(unique(firearms_data[selected_stat()]))[1])
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
create_plot('UCR_CATEGORY', 'HOMICIDE')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
?conditionalPanel
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
View(dt)
View(df)
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
rlk_theme<-function(base_family = "Helvetica", base_size = 12) {
theme_bw(base_family = base_family, base_size = base_size) +
theme(
plot.title = element_text(face = 'bold', hjust = 0, color="#4292c6", size= 24),
plot.subtitle = element_text(face = 'bold', hjust = 0, color="#4292c6", size= 14),
text = element_text(colour = 'black'),
panel.background = element_blank(),
strip.background = element_blank(),
plot.background = element_rect('#F6F6F6'),
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(color="#4292c6",size=rel(1.75)),
panel.grid.minor.y = element_blank(),
panel.grid.minor.x = element_blank(),
legend.background = element_blank(),
legend.title = element_text(face='bold', size=8, color="#4292c6"),
legend.position = 'bottom',
legend.direction = 'horizontal',
legend.key = element_blank(),
legend.text= element_text(face='bold', size=8, color="#4292c6"),
strip.text = element_blank(),
axis.text.y = element_text(size = 10, color='#000000'),
axis.text.x = element_text(size = 10, color='#000000'),
axis.title = element_text(face = 'bold', size = 10, color='#000000'),
axis.ticks = element_blank()
)
}
firearms_data <- read_csv('FIREARMS_DATA_W_YEAR.csv')
firearms_data <- mutate(firearms_data, RECOVERY_DATE = as.Date(firearms_data$RECOVERY_DATE, format = '%m/%d/%Y'),
age_group = cut(as.numeric(firearms_data$PERSON_RECOVERED_FROM_AGE), breaks = 10*(0:10)),
shooting_yearmon = as.yearmon(RECOVERY_DATE),
UCR_CATEGORY = as.factor(UCR_CATEGORY),
TYPE_OF_FIREARM = as.factor(TYPE_OF_FIREARM),
FIREARM_MANUFACTURER = as.factor(FIREARM_MANUFACTURER),
FIREARM_CALIBER = as.factor(FIREARM_CALIBER),
PERSON_RECOVERED_FROM_RACE = as.factor(PERSON_RECOVERED_FROM_RACE),
PERSON_RECOVERED_FROM_SEX = as.factor(PERSON_RECOVERED_FROM_SEX)
)
jeff_co_zips<-c(40118,40201,40203,40202,40205,40204,40207,40206,40209,40208,40211,40210,40213,40212,40215,40214,40217,40216,40219,40218,40220,40223,
40222,40225,40229,40228,40241,40243,40242,40245,40257,40258,40272,40025,40023,40027,40292,40291,40299,40059)
categories <- c('Type of Incident' = 'UCR_CATEGORY',
'Type of Firearm' = 'TYPE_OF_FIREARM',
'Firearm Manufacturer' = 'FIREARM_MANUFACTURER',
'Firearm Model' = 'FIREARM_MODEL',
'Firearm Caliber' = 'FIREARM_CALIBER',
'Race' = 'PERSON_RECOVERED_FROM_RACE')
ky_zips<-readOGR('./shapefile', layer='ky_zips')
ky_zips@data$id <- rownames(ky_zips@data)
ky_zips.points <- tidy(ky_zips, region = 'id')
ky_zips.df <- inner_join(ky_zips.points, ky_zips@data, by='id')
create_leaflet <- function(analysis_year, analysis_factor, filter_value){
firearm_summary<-create_table(analysis_year, analysis_factor, filter_value)
lou_zips <- subset(ky_zips, ZCTA5CE10 %in% jeff_co_zips)
lou_zips@data <- left_join(lou_zips@data, firearm_summary, by=c('ZCTA5CE10' = 'RECOVERY_ZIPCODE')) %>%
mutate(analysis = ifelse(is.na(analysis), 0, analysis))
pop<-paste0('<strong>',lou_zips$ZCTA5CE10,':</strong> ',lou_zips$analysis)
lou_zips@data$color <- colorBin('YlOrRd', NULL, n = 7)(lou_zips$analysis)
leaflet(data = lou_zips) %>%
addTiles() %>%
setView(lng = -85.7369, lat = 38.1757, zoom = 10) %>%
addPolygons(data = lou_zips,
stroke = F,
smoothFactor = 0.2,
fillOpacity = 0.75,
fillColor = lou_zips@data$color,
color ="#BDBDC3",
popup = pop) %>%
addPolylines(weight = 2, color='black')
}
create_table <- function(analysis_year, analysis_factor, filter_value){
firearms_data$level_of_analysis <- firearms_data[analysis_factor]
filter(firearms_data, year == as.numeric(analysis_year),
level_of_analysis == filter_value) %>%
group_by(RECOVERY_ZIPCODE) %>%
dplyr::summarize(analysis = n()) %>%
mutate(RECOVERY_ZIPCODE = as.factor(RECOVERY_ZIPCODE),
analysis = ifelse(is.na(analysis), 0, analysis)) %>%
arrange(desc(analysis))
}
create_plot <- function(analysis_factor, filter_value){
firearms_data$level_of_analysis <- unlist(firearms_data[analysis_factor])
plot_data<- firearms_data %>%
filter(level_of_analysis == filter_value, !is.na(year)) %>%
group_by(year) %>%
dplyr::summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(color = 'bluish')
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme() +
theme(legend.position = 'none')
}
create_plot <- function(analysis_factor, filter_value){
firearms_data$level_of_analysis <- unlist(firearms_data[analysis_factor])
plot_data<- firearms_data %>%
filter(level_of_analysis == filter_value, !is.na(year)) %>%
group_by(year) %>%
dplyr::summarize(total = n()) %>%
arrange(desc(total)) %>%
mutate(color = 'bluish')
ggplot(plot_data, aes(x = as.character(year), y=total, fill = color, label = total)) +
geom_bar(stat='identity')+
geom_label() +
scale_fill_manual(values = c('bluish' = '#2171b5'))+
labs(title = paste0(analysis_factor,' ~ ',filter_value),
y = 'Number of Incidents',
x = '')+
rlk_theme() +
theme(legend.position = 'none')
}
create_plot('UCR_CATEGORY','SUICIDE')
runApp('Louisville_Firearms.R')
mtcars
ggplot(mtcars, aes(x = mpg, y = cyl)) + geom_point()
runApp('Louisville_Firearms.R')
plot(ggplot(mtcars, aes(x = mpg, y = cyl)) + geom_point())
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
jeff_co_zips
c('All', jeff_co_zips)
runApp('Louisville_Firearms.R')
runApp('Louisville_Firearms.R')
