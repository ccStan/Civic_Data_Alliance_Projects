{
    "contents" : "\n##################################################\n#                                                #\n#     Louisville Building Permits Shiny App      #\n#     Author: Robert Kahne                       #\n#                                                #\n##################################################\n\nlibrary(shiny)\nlibrary(choroplethr)\nlibrary(choroplethrZip)\n\n####################################\n#              Fuctions            #\n####################################\nnextYearTuple <- function(aDate){\n  temp <- as.POSIXlt(aDate)\n  temp$year<-temp$year+1\n  temp<-as.Date(temp)\n  return(c(aDate,temp))\n}\n\n\n####################################\n#              Plumbing            #\n####################################\n\nCodesAndRegsPermits<-read.csv('CodesAndRegsPermits.csv')\nCodesAndRegsPermits$IssueDate <- as.Date(as.character(CodesAndRegsPermits$IssueDate), format='%m/%d/%Y %H:%M')\nPermitsZips<-unique(as.character(CodesAndRegsPermits$ZipCode))\nPermitsZips<-as.character(PermitsZips)\n\ndateIterable <- as.Date('2004-01-01') # There is some data for 2003, but it is partial, so we will start in 2004\n\nYearlyZips <- list()\n\n# Create a list of all the Permits for each year for which we have data (return zip code)\nfor(i in 1:11){ # 1:11 because that is the number of years from 2004-2014\n  YearTuple<-nextYearTuple(dateIterable)\n  YearlyZips[[i]]<-list(subset(CodesAndRegsPermits, IssueDate>=YearTuple[1]&IssueDate<YearTuple[2],select = ZipCode)$ZipCode)\n  dateIterable <- as.POSIXlt(dateIterable)\n  dateIterable$year<-dateIterable$year+1\n  dateIterable<-as.Date(dateIterable)\n}\n\n# Sum up the previous list BY zip\nSumYearlyZips<-list()\nfor (i in 1:length(YearlyZips)){\n  SumYearlyZips[[i]]<-lapply(PermitsZips,function(j){length(which(as.character(unlist(YearlyZips[[i]]))==j))})\n}\nSumYearlyZips<-lapply(SumYearlyZips,unlist)\n\n# Frame up the list so we can work with it, give it appropriate headers\nPermitsZipYear<-data.frame(PermitsZips,SumYearlyZips)\ncolnames(PermitsZipYear)<-c('Zip','2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014')\nPermitsZipYear$Zip<-as.character(PermitsZipYear$Zip)\n\n# choroplethr does not work well unless we have ALL the zips, with 0s for those which DNE.  So, we need to fix up our frame.\nLouisvilleZips <- data.frame(c('40212','40211','40216','40258','40272','40203','40210','40208','40215','40214','40118','40209','40202','40206','40204','40217',\n                               '40213','40219','40229','40205','40218','40228','40291','40220','40299','40023','40245','40059','40241','40223','40243',\n                               '40242','40025','40222','40207','40177','40231','40041','40280'))\ncolnames(LouisvilleZips)<-'region'\nLouisvilleZips$region<-as.character(LouisvilleZips$region)\n\nLouisvilleZips<-merge(LouisvilleZips,PermitsZipYear, by.x='region',by.y='Zip', all.x=TRUE)\nLouisvilleZips[is.na(LouisvilleZips)]<-0\n\n####################################\n#              Set - Up            #\n####################################\n\n\n\n\nui<-fluidPage(\n  \n  # Application title\n  headerPanel(\"Louisville Building Permits by Year\"),\n  \n  # Sidebar with a slider input for number of bins\n  sidebarPanel(\n    selectInput(\"Year\",\n                \"Year:\",\n                c('2004','2005','2006','2007','2008','2009','2010','2011','2012','2013','2014'))\n  ),\n  # Show a plot of the generated distribution\n  mainPanel(\n    plotOutput(\"mainPlot\")\n  )\n)\nserver<-function(input, output) {\n  output$mainPlot <- renderPlot({\n    outputFrame<-data.frame(LouisvilleZips$region,LouisvilleZips[input$Year])\n    colnames(outputFrame)<-c('region','value')\n    zip_choropleth(outputFrame,\n                   county_zoom = '21111',\n                   title = cat('Building Permits in Louisville, ',input$Year),\n                   legend = '# Permits',\n                   num_colors = 1)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n",
    "created" : 1444331630301.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "815983298",
    "id" : "B5DD0073",
    "lastKnownWriteTime" : 1444405305,
    "path" : "C:/GitHub/LouDataProj/LouisvilleGentrification.R",
    "project_path" : "LouisvilleGentrification.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}